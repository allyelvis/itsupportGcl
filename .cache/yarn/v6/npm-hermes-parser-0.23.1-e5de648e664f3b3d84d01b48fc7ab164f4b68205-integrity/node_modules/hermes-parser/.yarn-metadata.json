{
  "manifest": {
    "name": "hermes-parser",
    "version": "0.23.1",
    "description": "A JavaScript parser built from the Hermes engine",
    "main": "dist/index.js",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git@github.com:facebook/hermes.git"
    },
    "dependencies": {
      "hermes-estree": "0.23.1"
    },
    "devDependencies": {
      "@babel/parser": "7.7.4",
      "@babel/generator": "7.7.4",
      "@babel/types": "7.7.4",
      "espree": "9.3.2"
    },
    "files": [
      "dist",
      "LICENCE",
      "README.md"
    ],
    "_registry": "npm",
    "_loc": "/home/itsupport/.cache/yarn/v6/npm-hermes-parser-0.23.1-e5de648e664f3b3d84d01b48fc7ab164f4b68205-integrity/node_modules/hermes-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# hermes-parser\nA JavaScript parser built from the Hermes engine's parser compiled to WebAssembly. Can parse ES6, Flow, and JSX syntax.\n\n## API\nThe Hermes parser exposes a single `parse(code, [options])` function, where `code` is the source code to parse as a string, and `options` is an optional object that may contain the following properties:\n- **babel**: `boolean`, defaults to `false`. If `true`, output an AST conforming to Babel's AST format. If `false`, output an AST conforming to the ESTree AST format.\n- **allowReturnOutsideFunction**: `boolean`, defaults to `false`. If `true`, do not error on return statements found outside functions.\n- **flow**: `\"all\"` or `\"detect\"`, defaults to `\"detect\"`. If `\"detect\"`, only parse syntax as Flow syntax where it is ambiguous whether it is a Flow feature or regular JavaScript when the `@flow` pragma is present in the file. Otherwise if `\"all\"`, always parse ambiguous syntax as Flow syntax regardless of the presence of an `@flow` pragma. For example `foo<T>(x)` in a file without an `@flow` pragma will be parsed as two comparisons if set to `\"detect\"`, otherwise if set to `\"all\"` or the `@flow` pragma is included it will be parsed as a call expression with a type argument.\n- **sourceFilename**: `string`, defaults to `null`. The filename corresponding to the code that is to be parsed. If non-null, the filename will be added to all source locations in the output AST.\n- **sourceType**: `\"module\"`, `\"script\"`, or `\"unambiguous\"` (default). If `\"unambiguous\"`, source type will be automatically detected and set to `\"module\"` if any ES6 imports or exports are present in the code, otherwise source type will be set to `\"script\"`.\n- **tokens**: `boolean`, defaults to `false`. If `true`, add all tokens to a `tokens` property on the root node.\n",
    "licenseText": "MIT License\n\nCopyright (c) Meta Platforms, Inc. and affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.23.1.tgz#e5de648e664f3b3d84d01b48fc7ab164f4b68205",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.23.1.tgz",
    "hash": "e5de648e664f3b3d84d01b48fc7ab164f4b68205",
    "integrity": "sha512-oxl5h2DkFW83hT4DAUJorpah8ou4yvmweUzLJmmr6YV2cezduCdlil1AvU/a/xSsAFo4WUcNA4GoV5Bvq6JffA==",
    "registry": "npm",
    "packageName": "hermes-parser",
    "cacheIntegrity": "sha512-oxl5h2DkFW83hT4DAUJorpah8ou4yvmweUzLJmmr6YV2cezduCdlil1AvU/a/xSsAFo4WUcNA4GoV5Bvq6JffA== sha1-5d5kjmZPOz2E0BtI/HqxZPS2ggU="
  },
  "registry": "npm",
  "hash": "e5de648e664f3b3d84d01b48fc7ab164f4b68205"
}