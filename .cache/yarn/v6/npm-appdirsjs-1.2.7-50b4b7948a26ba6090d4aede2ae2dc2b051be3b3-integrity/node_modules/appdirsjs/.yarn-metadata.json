{
  "manifest": {
    "name": "appdirsjs",
    "version": "1.2.7",
    "description": "OS-dependent application paths for cache, data and config directories",
    "license": "MIT",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "files": [
      "dist/index.js",
      "dist/index.d.ts"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/codingjerk/appdirsjs.git"
    },
    "devDependencies": {
      "@types/jest": "^26.0.15",
      "@typescript-eslint/eslint-plugin": "^4.5.0",
      "@typescript-eslint/parser": "^4.5.0",
      "eslint": "^7.11.0",
      "jest": "^26.6.1",
      "ts-jest": "^26.4.2",
      "typescript": "^4.0.3"
    },
    "_registry": "npm",
    "_loc": "/home/itsupport/.cache/yarn/v6/npm-appdirsjs-1.2.7-50b4b7948a26ba6090d4aede2ae2dc2b051be3b3-integrity/node_modules/appdirsjs/package.json",
    "readmeFilename": "README.md",
    "readme": "# appdirsjs\n\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/codingjerk/appdirsjs/ci)](https://github.com/codingjerk/appdirsjs/actions)\n[![Codecov](https://img.shields.io/codecov/c/gh/codingjerk/appdirsjs)](https://codecov.io/gh/codingjerk/appdirsjs)\n[![npm](https://img.shields.io/npm/v/appdirsjs)](https://www.npmjs.com/package/appdirsjs)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/appdirsjs)](https://www.npmjs.com/package/appdirsjs)\n[![GitHub](https://img.shields.io/badge/license-MIT-blue)](https://github.com/codingjerk/appdirsjs/blob/master/_LICENSE.md)\n\nA node.js library to get paths to directories to store configs, caches and data according to OS standarts.\n\n## Installation\n\n```sh\nnpm install appdirsjs\n```\n\nor\n\n```sh\nyarn install appdirsjs\n```\n\nif you're using yarn.\n\n## Usage\n\n```javascript\nimport appDirs from \"appdirsjs\";\n\nconst dirs = appDirs({ appName: \"expo\" });\n\nconsole.log(dirs.cache);\n// /home/user/.cache/expo on Linux\n// /Users/User/Library/Caches/expo on MacOS\n// C:\\Users\\User\\AppData\\Local\\Temp\\expo on Windows\n\nconsole.log(dirs.config);\n// /home/user/.config/expo on Linux\n// /Users/User/Library/Preferences/expo on MacOS\n// C:\\Users\\User\\AppData\\Roaming\\expo\n\nconsole.log(dirs.data);\n// /home/user/.local/share/expo on Linux\n// /Users/User/Library/Application Support/expo on MacOS\n// C:\\Users\\User\\AppData\\Local\\expo\n```\n\n### Keep backward compability\n\nThen switching from old-style dotfile directory,\nsuch as `~/.myapp` to new, like `~/.config/myapp`,\nyou can pass `legacyPath` parameter\nto keep using old directory if it exists:\n\n```javascript\nimport * as path from \"path\";\nimport appDirs from \"appdirsjs\";\n\nconst dirs = appDirs({\n  appName: \"expo\",\n  // Notice usage of full path\n  legacyPath: path.join(os.homedir(), \".expo\"),\n});\n\nconsole.log(dirs.config);\n// /home/user/.expo\n```\n\n## TODO\n\n- [ ] Android support\n- [ ] XDG on BSD support\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/appdirsjs/-/appdirsjs-1.2.7.tgz#50b4b7948a26ba6090d4aede2ae2dc2b051be3b3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/appdirsjs/-/appdirsjs-1.2.7.tgz",
    "hash": "50b4b7948a26ba6090d4aede2ae2dc2b051be3b3",
    "integrity": "sha512-Quji6+8kLBC3NnBeo14nPDq0+2jUs5s3/xEye+udFHumHhRk4M7aAMXp/PBJqkKYGuuyR9M/6Dq7d2AViiGmhw==",
    "registry": "npm",
    "packageName": "appdirsjs",
    "cacheIntegrity": "sha512-Quji6+8kLBC3NnBeo14nPDq0+2jUs5s3/xEye+udFHumHhRk4M7aAMXp/PBJqkKYGuuyR9M/6Dq7d2AViiGmhw== sha1-ULS3lIomumCQ1K7eKuLcKwUb47M="
  },
  "registry": "npm",
  "hash": "50b4b7948a26ba6090d4aede2ae2dc2b051be3b3"
}