{
  "manifest": {
    "name": "flow-parser",
    "version": "0.250.0",
    "description": "JavaScript parser written in OCaml. Produces ESTree AST",
    "homepage": "https://flow.org/",
    "license": "MIT",
    "author": {
      "name": "Flow Team",
      "email": "flow@fb.com"
    },
    "files": [
      "flow_parser.js"
    ],
    "main": "flow_parser.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/facebook/flow.git"
    },
    "scripts": {
      "test": "node test/run_tests.js",
      "build": "make js"
    },
    "dependencies": {},
    "devDependencies": {
      "ast-types": "^0.15.2",
      "chalk": "^4.1.2",
      "esprima-fb": "15001.1001.0-dev-harmony-fb",
      "minimist": ">=1.2.6"
    },
    "engines": {
      "node": ">=0.4.0"
    },
    "_registry": "npm",
    "_loc": "/home/itsupport/.cache/yarn/v6/npm-flow-parser-0.250.0-11fee8836664c5df489b8d93079fd50ab36be5d8-integrity/node_modules/flow-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# The flow-parser package\n\nThis package contains the Flow parser in its compiled-to-JavaScript form.\n\n# What is Flow\n\nSee [flow.org](https://flow.org/). The code for the Flow parser [lives on GitHub](https://github.com/facebook/flow/tree/master/src/parser).\n\n# What is the Flow Parser\n\nThe Flow Parser is a JavaScript parser written in OCaml. It produces an AST that conforms to the [ESTree spec](https://github.com/estree/estree) and that mostly matches what [esprima](http://esprima.org/) produces. The Flow Parser can be compiled to native code or can be compiled to JavaScript using [js_of_ocaml](http://ocsigen.org/js_of_ocaml/). This npm package contains the Flow parser compiled to JavaScript.\n\n# Usage\n\nYou can use the Flow parser in your browser or in node. To use in node you can just do\n\n```JavaScript\nrequire('flow-parser').parse('1+1', {});\n```\n\nTo use in the browser, you can add\n\n```HTML\n<script src=\"flow_parser.js\"></script>\n```\n\nwhich will make the `flow` object available to use like so:\n\n```JavaScript\nflow.parse('1+1', {});\n```\n\n## Options\n\nThe second argument to `flow.parse` is the options object. Currently supported options:\n\n* `all_comments` (boolean, default `true`) - include a list of all comments from the whole program\n* `comments` (boolean, default `true`) - attach comments to AST nodes (`leadingComments` and `trailingComments`)\n* `enums` (boolean, default `false`) - enable parsing of Flow enums\n* `esproposal_decorators` (boolean, default `false`) - enable parsing of decorators\n* `esproposal_export_star_as` (boolean, default `false`) - enable parsing of `export * as` syntax\n* `tokens` (boolean, default `false`) - include a list of all parsed tokens in a top-level `tokens` property\n* `types` (boolean, default `true`) - enable parsing of Flow types\n* `use_strict` (boolean, default `false`) - treat the file as strict, without needing a \"use strict\" directive\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/flow-parser/-/flow-parser-0.250.0.tgz#11fee8836664c5df489b8d93079fd50ab36be5d8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/flow-parser/-/flow-parser-0.250.0.tgz",
    "hash": "11fee8836664c5df489b8d93079fd50ab36be5d8",
    "integrity": "sha512-8mkLh/CotlvqA9vCyQMbhJoPx2upEg9oKxARAayz8zQ58wCdABnTZy6U4xhMHvHvbTUFgZQk4uH2cglOCOel5A==",
    "registry": "npm",
    "packageName": "flow-parser",
    "cacheIntegrity": "sha512-8mkLh/CotlvqA9vCyQMbhJoPx2upEg9oKxARAayz8zQ58wCdABnTZy6U4xhMHvHvbTUFgZQk4uH2cglOCOel5A== sha1-Ef7og2Zkxd9Im42TB5/VCrNr5dg="
  },
  "registry": "npm",
  "hash": "11fee8836664c5df489b8d93079fd50ab36be5d8"
}